services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-ethereum_fetcher}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ethereum-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-ethereum_fetcher}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app:
    build:
      context: .
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - ETH_NODE_URL=${ETH_NODE_URL}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-ethereum_fetcher}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ethereum-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/lime/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

networks:
  ethereum-network:
    driver: bridge

volumes:
  postgres_data: 
